import {createSlice} from "@reduxjs/toolkit"

//recovery of the cart present in the localStorage
let lsCart = JSON.parse(window.localStorage.getItem('GGG-cart'))

//it returns an array of objects which means that the cart is present otherwise it has not found one
if (lsCart === null) {
    //empty cart is initialized
    lsCart = []
}

//function calculating the total price of the cart coming from storage
export const cartTotalAmount = (cart) => {
    
    if(!Array.isArray(cart)) {
        console.error("Le panier n'est pas un tableau:", cart)
        return 0
    }
    //cartTotalAmount takes an array of items (cart) and calculates the total price by adding the price of each item
    let price = 0
    cart.forEach((p)=> {
        price += parseFloat(p.price)   
    })
    return price
}

//Initial total price is calculated by calling cartTotalAmount with the cart retrieved from localStorage
let initialTotalPrice = cartTotalAmount(lsCart)

//Initialize a state:
//either a cart with an array of objects and totalPrice with the total sum
//or a cart with an empty array and totalPrice set to zero
const initialState = {
    cart : lsCart,
    totalPrice : initialTotalPrice
}

export const cartSlice = createSlice({
    name : "cart",
    initialState,
    reducers : {
        //updateCart updates the cart with the data provided in action.payload and recalculates the total price
        updateCart : (state, action) => {
            if(!Array.isArray(action.payload)) {
                state.cart=[]
                state.totalPrice = 0
                return
            }
            let total = cartTotalAmount(action.payload)
            state.cart = action.payload
            state.totalPrice = total
            
        },
        //cleanCart resets the cart to an empty array and the total price to zero
        cleanCart : (state) => {
            state.cart = []
            state.totalPrice = 0
        }
    }
})

//updateCart and cleanCart are actions automatically generated by createSlice. They are exported for use in React components
export const {updateCart, cleanCart} = cartSlice.actions
//selectCart is a selector that allows access to the state of the slice cart in the Redux store
export const selectCart = (state) => state.cart

//reducer generated by createSlice is exported by default for use when configuring the Redux store
export default cartSlice.reducer